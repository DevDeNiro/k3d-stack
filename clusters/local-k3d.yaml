apiVersion: v1
kind: Namespace
metadata:
    name: argocd
    labels:
        name: argocd
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
    name: default
    namespace: argocd
spec:
    description: Default project for local k3d cluster
    sourceRepos:
        - '*'
    destinations:
        -   namespace: '*'
            server: https://kubernetes.default.svc
    clusterResourceWhitelist:
        -   group: '*'
            kind: '*'
    namespaceResourceWhitelist:
        -   group: '*'
            kind: '*'
---
# App of Apps - This application manages all other applications
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
    name: app-of-apps
    namespace: argocd
    finalizers:
        - resources-finalizer.argocd.argoproj.io
spec:
    project: default
    source:
        repoURL: https://github.com/your-org/your-gitops-repo.git  # Replace with your GitOps repo
        targetRevision: HEAD
        path: applications
    destination:
        server: https://kubernetes.default.svc
        namespace: argocd
    syncPolicy:
        automated:
            prune: true
            selfHeal: true
        syncOptions:
            - CreateNamespace=true
---
# Example application - PostgreSQL
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
    name: postgresql
    namespace: argocd
spec:
    project: default
    source:
        repoURL: https://charts.bitnami.com/bitnami
        chart: postgresql
        targetRevision: "13.2.24"
        helm:
            parameters:
                -   name: auth.postgresPassword
                    value: "dev-password"
                -   name: auth.database
                    value: "myapp"
                -   name: auth.username
                    value: "myapp"
                -   name: auth.password
                    value: "dev-password"
                -   name: primary.persistence.size
                    value: "1Gi"
    destination:
        server: https://kubernetes.default.svc
        namespace: storage
    syncPolicy:
        automated:
            prune: true
            selfHeal: true
        syncOptions:
            - CreateNamespace=true
---
# Example application - Redis
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
    name: redis
    namespace: argocd
spec:
    project: default
    source:
        repoURL: https://charts.bitnami.com/bitnami
        chart: redis
        targetRevision: "18.19.4"
        helm:
            parameters:
                -   name: auth.password
                    value: "dev-password"
                -   name: master.persistence.size
                    value: "1Gi"
    destination:
        server: https://kubernetes.default.svc
        namespace: storage
    syncPolicy:
        automated:
            prune: true
            selfHeal: true
        syncOptions:
            - CreateNamespace=true
---
# Example application - Monitoring namespace
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
    name: monitoring
    namespace: argocd
spec:
    project: default
    source:
        repoURL: https://prometheus-community.github.io/helm-charts
        chart: kube-prometheus-stack
        targetRevision: "58.2.2"
        helm:
            parameters:
                -   name: prometheus.prometheusSpec.retention
                    value: "7d"
                -   name: prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage
                    value: "2Gi"
                -   name: grafana.adminPassword
                    value: "admin"
    destination:
        server: https://kubernetes.default.svc
        namespace: monitoring
    syncPolicy:
        automated:
            prune: true
            selfHeal: true
        syncOptions:
            - CreateNamespace=true
