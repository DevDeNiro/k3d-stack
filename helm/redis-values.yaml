architecture: standalone

auth:
    enabled: true
    # Password will be set via command line for security
    sentinel: false

# Master configuration
master:
    # Resource requests and limits
    resources:
        requests:
            memory: "256Mi"
            cpu: "100m"
        limits:
            memory: "512Mi"
            cpu: "200m"

    # Persistence configuration
    persistence:
        enabled: true
        size: "4Gi"
        storageClass: ""
        accessModes:
            - ReadWriteOnce

    # Redis configuration
    configuration: |
        maxmemory 256mb
        maxmemory-policy allkeys-lru
        
        save 900 1
        save 300 10
        save 60 10000
        
        protected-mode yes
        
        tcp-keepalive 300
        timeout 0
        
        loglevel notice

    podAnnotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6379"

    podLabels:
        app: redis
        component: cache

    service:
        type: ClusterIP
        ports:
            redis: 6379

# Replica configuration (disabled for standalone)
replica:
    replicaCount: 0

# Sentinel configuration (disabled)
sentinel:
    enabled: false

# Metrics and monitoring
metrics:
    enabled: true
    resources:
        requests:
            memory: "64Mi"
            cpu: "50m"
        limits:
            memory: "128Mi"
            cpu: "100m"

    service:
        type: ClusterIP
        annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9121"

    serviceMonitor:
        enabled: false
        labels: { }
        annotations: { }

# Security context
securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001

# Network policy
networkPolicy:
    enabled: false
    allowExternal: true

# Pod Disruption Budget
pdb:
    create: false
    minAvailable: 1

# Init containers
initContainers: [ ]

# Sidecar containers
sidecars: [ ]

# Extra environment variables
extraEnvVars: [ ]

# Additional volumes
extraVolumes: [ ]
extraVolumeMounts: [ ]

# Redis command arguments
args: [ ]

# Custom command
command: [ ]

# Startup, liveness and readiness probes
startupProbe:
    enabled: false

livenessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

readinessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5

# TLS configuration (disabled by default)
tls:
    enabled: false

# Common labels to apply to all resources
commonLabels:
    app: redis
    tier: cache